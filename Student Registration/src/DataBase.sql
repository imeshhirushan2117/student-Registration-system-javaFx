DROP DATABASE IF EXISTS Institute;
CREATE DATABASE IF NOT EXISTS Institute;
SHOW DATABASES ;
USE Institute;

#------------------------
DROP TABLE IF EXISTS `User`;
CREATE TABLE IF NOT EXISTS `User`(

First_Name VARCHAR(30),
Last_Name  VARCHAR (30),
Contact VARCHAR(15),
Email VARCHAR(30),
`User_Name` VARCHAR(20),
`User_Password` VARCHAR(100),
`Role` VARCHAR (10),
CONSTRAINT PRIMARY KEY(`User_Name`)
);
SHOW TABLES;
DESCRIBE `User`;

#-----------------------
DROP TABLE IF EXISTS logIn;
CREATE TABLE IF NOT EXISTS logIn(

`User_Name` VARCHAR(20),
Password  VARCHAR(100),
CONSTRAINT FOREIGN KEY ( `User_Name`) REFERENCES `User`( `User_Name`) ON DELETE CASCADE ON UPDATE CASCADE
);
SHOW TABLES;
DESCRIBE logIn;

#-----------------------
DROP TABLE IF EXISTS Course;
CREATE TABLE IF NOT EXISTS Course(
Course_Id  VARCHAR(10),
Course_Name  VARCHAR(20),
Duration  VARCHAR(15),
CONSTRAINT PRIMARY KEY(Course_Id)
);
SHOW TABLES;
DESCRIBE Course;

#-----------------------

DROP TABLE IF EXISTS Batch;
CREATE TABLE IF NOT EXISTS Batch(
Batch_Id  VARCHAR(10),
Batch_Name  VARCHAR(20),
Course_Id  VARCHAR(10),
CourseName VARCHAR(15),
CONSTRAINT PRIMARY KEY(Batch_Id,Course_Id),
CONSTRAINT FOREIGN KEY (Course_Id) REFERENCES Course(Course_Id ) ON DELETE CASCADE ON UPDATE CASCADE
);
SHOW TABLES;
DESCRIBE Batch;

#-----------------------
DROP TABLE IF EXISTS Student;
CREATE TABLE IF NOT EXISTS Student(

Student_Id VARCHAR(15),
Student_Name VARCHAR (50),
Course_Id  VARCHAR(10),
Address VARCHAR(50),
Batch_Id  VARCHAR(10),
Gender VARCHAR(10),
Contact VARCHAR(15),
Email VARCHAR(50),
Admission_fee VARCHAR(10),

CONSTRAINT PRIMARY KEY(Student_Id),
CONSTRAINT FOREIGN KEY (Course_Id) REFERENCES Course(Course_Id ) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT FOREIGN KEY (Batch_Id) REFERENCES Batch(Batch_Id) ON DELETE CASCADE ON UPDATE CASCADE
);
SHOW TABLES;
DESCRIBE Student;

#-----------------------
DROP TABLE IF EXISTS Fee;
CREATE TABLE IF NOT EXISTS Fee(

Fee_Id VARCHAR(15),
Course_Id  VARCHAR(10),
Cash DOUBLE (10,2),
Date DATE,
CourseName VARCHAR(15),
CONSTRAINT PRIMARY KEY(Fee_Id),
CONSTRAINT FOREIGN KEY (Course_Id) REFERENCES Course(Course_Id ) ON DELETE CASCADE ON UPDATE CASCADE
);
SHOW TABLES;
DESCRIBE Fee;

#-----------------------
DROP TABLE IF EXISTS Registration;
CREATE TABLE IF NOT EXISTS Registration(

Student_Id  VARCHAR(10),
Batch_Id  VARCHAR(10),
Date DATE,
CONSTRAINT PRIMARY KEY ( Student_Id,Batch_Id),
CONSTRAINT FOREIGN KEY (Student_Id) REFERENCES Student(Student_Id) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT FOREIGN KEY (Batch_Id) REFERENCES Batch(Batch_Id) ON DELETE CASCADE ON UPDATE CASCADE

);
SHOW TABLES;
DESCRIBE Registration;

#-----------------------
DROP TABLE IF EXISTS Teacher;
CREATE TABLE IF NOT EXISTS Teacher(
Teacher_Id VARCHAR(15),
Teacher_Name VARCHAR(30),
Teacher_Address VARCHAR(20),
Email VARCHAR(50),
Gender VARCHAR(10),
Contact VARCHAR(15),
CONSTRAINT PRIMARY KEY(Teacher_Id)
);
SHOW TABLES;
DESCRIBE Teacher;

#-----------------------
DROP TABLE IF EXISTS Exam;
CREATE TABLE IF NOT EXISTS Exam(
Exam_Id VARCHAR(10),
Description VARCHAR(30),
Exam_Type VARCHAR(20),
CONSTRAINT PRIMARY KEY(Exam_Id)

);
SHOW TABLES;
DESCRIBE Exam;

#-----------------------
DROP TABLE IF EXISTS Subject;
CREATE TABLE IF NOT EXISTS Subject(
Subject_Id VARCHAR(10),
Subject_Name VARCHAR(30),
Teacher_Id VARCHAR(15),
Exam_Id VARCHAR(10),
Time_Period VARCHAR(10),
Course_Id VARCHAR(10),
Teacher_Name VARCHAR(30),
Exam_Name varchar(20),
CourseName varchar(15),
CONSTRAINT PRIMARY KEY(Subject_Id),
CONSTRAINT FOREIGN KEY (Teacher_Id) REFERENCES Teacher(Teacher_Id) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT FOREIGN KEY (Exam_Id) REFERENCES Exam(Exam_Id) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT FOREIGN KEY (Course_Id) REFERENCES Course (Course_Id) ON DELETE CASCADE ON UPDATE CASCADE
);
SHOW TABLES;
DESCRIBE Subject;

